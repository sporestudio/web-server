services:
  dyndns:
    build: ./dyndns
    container_name: dyndns
    depends_on: 
      - web

  web:
    image: httpd:latest
    container_name: web
    env_file:
      - .env
    volumes:
      - ./web/htdocs:/usr/local/apache2/htdocs
      - ./web/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./web/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
      - certs:/etc/letsencrypt
    ports:
      - 8080:80
      - 4433:443

  url-shortener:
    build: 
      context: ./url-shortener
      target: builder
    stop_signal: SIGINT
    container_name: url-shortener
    env_file:
      - .env
    expose:
      - 5000

  web-downloader:
    build:
      context: ./web-downloader
      target: builder
    stop_signal: SIGINT
    container_name: web-downloader
    expose:
      - 5001

  apache-exporter: 
    image: lusotycoon/apache-exporter
    container_name: apache-exporter
    depends_on:
      - web
    privileged: true
    expose:
      - 9117
    restart: unless-stopped
    extra_hosts:
    - "localhost:127.17.0.1"
    env_file:
      - .env
    entrypoint: /bin/apache_exporter --scrape_uri="https://sysadmin:${STATUS_PASSWD}@sporestudio.me/status?auto/"
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - apache-exporter
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    expose:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana

  jenkins:
    image: jenkins/jenkins:2.491-jdk21
    container_name: jenkins
    user: root
    privileged: true
    restart: unless-stopped
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock # Allow Jenkins to excute containers inside its pipeline
    expose:
      - 8080
      - 50000

  jenkins-agent:
    build: ./jenkins-agent
    container_name: jenkins-agent 
    env_file:
      - .env
    environment:
      - JENKINS_URL=${JENKINS_URL}
      - JENKINS_AGENT_NAME=${JENKINS_AGENT}
      - JENKINS_SECRET=${JENKINS_SECRET}
    volumes:
      - jenkins_agent:/home/jenkins/agent
    depends_on:
      - jenkins

volumes:
  prometheus_data:
  grafana_data:
  jenkins_home:
  jenkins_agent:
  certs:
    external: true